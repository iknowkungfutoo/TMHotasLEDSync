/*-------------------------------------------------------------------------------
  --
  -- fa-18c_hornet_led_utils.tmh
  --
  -- Use at own risk without warranty.
  --
  -- F/A-18C Hornet specific utility functions to program the state of LEDs
  -- on Thrustmaster Warthog Throttle.
  --
  -- Author: slughead
  -- Date: 14/04/2025
  --
  ------------------------------------------------------------------------------*/

//include "warthog_defines.tmh"
//include "warthog_utils.tmh"

int fa_18c_landing_gear_handle_previous_state  = -1;

int set_fa_18c_hornet_led_status( alias led_states )
{
    int apu_ready_lamp_status = char_to_int(led_states[1]);
    int speed_brake_position  = char_to_int(led_states[2]);
    int console_light         = char_to_int(led_states[3]);
    int landing_gear_handle   = char_to_int(led_states[4]);

    if (&Throttle != &joy0)
    {
        set_led(&Throttle, get_tm_warthog_led_id( WH_LED5 ), (apu_ready_lamp_status == 1) );

        set_fa_18c_speed_brake_leds( speed_brake_position, (landing_gear_handle == 1) );

        set_fa_18c_hornet_backlight( console_light);

        if (fa_18c_landing_gear_handle_previous_state != landing_gear_handle)
        {
            fa_18c_landing_gear_handle_previous_state = landing_gear_handle;
            set_led(&Throttle, get_tm_warthog_led_id( WH_LED1 ), landing_gear_handle * LED_STATE_FLASH);

            // if landing gear handle is not lit, refresh speed brake position leds
            if (landing_gear_handle == 0)
            {
                set_fa_18c_speed_brake_leds( speed_brake_position, (landing_gear_handle == 1) );
            }
        }
    }
}

int set_fa_18c_speed_brake_leds(int speed_brake_position, int led1_reserved)
{
    if (&Throttle != &joy0)
    {
        if (led1_reserved != 1) set_led(&Throttle, get_tm_warthog_led_id( WH_LED1 ), (speed_brake_position >= 1));
        set_led(&Throttle, get_tm_warthog_led_id( WH_LED2 ), (speed_brake_position >= 2));
        set_led(&Throttle, get_tm_warthog_led_id( WH_LED3 ), (speed_brake_position >= 3));
        set_led(&Throttle, get_tm_warthog_led_id( WH_LED4 ), (speed_brake_position >= 4));
        //set_led(&Throttle, get_tm_warthog_led_id( WH_LED5 ), (speed_brake_position >= 5)); // WH_LED5 reserved for APU light.
    }
}

int set_fa_18c_hornet_backlight( int intensity )
{
    set_backlight( intensity );
}
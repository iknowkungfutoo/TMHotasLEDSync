/*-------------------------------------------------------------------------------
  --
  -- TMHotasLEDSync.tmc
  --
  -- Use at own risk without warranty.
  --
  -- Target script to set the state of LEDs on Thrustmaster Warthog,
  -- Viper Mission Pack and Viper Panel devices.
  --
  -- Receives TCP packets on port 2323 that indicate the state for
  -- various lamps and console lighting of a variety of aircraft.
  --
  -- Author: slughead
  -- Date: 12/05/2025
  --
  ------------------------------------------------------------------------------*/

define DEBUG 0

include "target.tmh"
include "aircraft_utils.tmh"
include "led_utils.tmh"
include "a-10c_led_utils.tmh"
include "f-16c_led_utils.tmh"
include "fa-18c_hornet_led_utils.tmh"
include "jf-17_led_utils.tmh"

define VERSION "1.0.9"

int main()
{
    printf( "\xaTMHotasLEDSync v%s\xa\xa", VERSION );

    // Excluded devices
    Configure(&Joystick,             MODE_EXCLUDED);
    Configure(&JoystickF18,          MODE_EXCLUDED);
    Configure(&AVA_F16,              MODE_EXCLUDED);
    Configure(&AVA_F18,              MODE_EXCLUDED);
    Configure(&LMFD,                 MODE_EXCLUDED);
    Configure(&RMFD,                 MODE_EXCLUDED);
    Configure(&HCougar,              MODE_EXCLUDED);
    Configure(&T16000,               MODE_EXCLUDED);
    Configure(&T16000L,              MODE_EXCLUDED);
    Configure(&TWCSThrottle,         MODE_EXCLUDED);
    Configure(&TFRPRudder,           MODE_EXCLUDED);
    Configure(&TFRPHARudder,         MODE_EXCLUDED);
    Configure(&A320Pilot,            MODE_EXCLUDED);
    Configure(&A320Copilot,          MODE_EXCLUDED);
    Configure(&TCAQuadrant12,        MODE_EXCLUDED);
    Configure(&TCAQuadrant34,        MODE_EXCLUDED);
    Configure(&TCAQBoeing12,         MODE_EXCLUDED);
    Configure(&TCAQBoeing34,         MODE_EXCLUDED);
    Configure(&TCAYokeBoeing,        MODE_EXCLUDED);
    Configure(&TCASidestickXPilot,   MODE_EXCLUDED);
    Configure(&TCASidestickXCopilot, MODE_EXCLUDED);
    //Configure(&FarmStickRight,       MODE_EXCLUDED);
    //Configure(&FarmStickLeft,        MODE_EXCLUDED);

    // Devices enabled for use in the script. All axis and
    // buttons pass through to Windows unaffected.
    Configure(&ViperTQS,             MODE_KEEPENABLED);
    Configure(&ViperBBox,            MODE_KEEPENABLED);
    Configure(&Throttle,             MODE_KEEPENABLED);

    if(Init(&EventHandle)) return 1;

    RegisterGameCallback(29914, &TCPCallback); // attach TCPCallback procedure to TCP port 29914

    SetKBRate(32, 50);
    SetKBLayout(KB_ENG);
    SetShiftButton(0, 0, 0, 0, 0, 0);

    reset_leds();
}

int EventHandle(int type, alias o, int x)
{
    DefaultMapping(&o, x);
}

int aircraft = AIRCRAFT_UNDEFINED;

int TCPCallback(int buf, int size)
{
    int i;

    char version; Dim(&version, 25);

    char packet;
    Map(&packet, buf); Dim(&packet, size);

    char packet_string;
    Map(&packet_string, buf); Dim(&packet_string, size+1);
    packet_string[size] = 0; // null terminate so can be printed

    if (DEBUG) printf("%s : %d bytes received\xa", &packet_string, size);

    if (size == 0) return 0;

    if (packet[0] == 'q') // simulation exit
    {
        lights_out();
    }
    else if (packet[0] == 'r') // reset led states
    {
        reset_leds();
    }
    else if (packet[0] == 'v')
    {
        strsub(&version, &packet_string, 1, strlen(&packet_string)-1);
        printf("%s\xa", &version);
    }
    else if (packet[0] == 'm')
    {
        // read the aircraft type
        aircraft = get_aircraft( &packet_string );

        if (aircraft == AIRCRAFT_UNDEFINED)
        {
            warthog_lights_on();
        }
    }
    else if (packet[0] == 'u') // update status of lamps
    {
        if (aircraft == F_16C_50)      set_f_16c_led_status( &packet );
        if (aircraft == A_10C)         set_a_10c_led_status( &packet );
        if (aircraft == A_10C_2)       set_a_10c_led_status( &packet );
        if (aircraft == FA_18C_HORNET) set_fa_18c_hornet_led_status( &packet );
        if (aircraft == SU_25T)        set_speed_brake_leds( char_to_int(packet[1]) );
        if (aircraft == SU_33)         set_speed_brake_leds( char_to_int(packet[1]) );
        if (aircraft == JF_17)         set_jf_17_led_status ( &packet );
    }
}
